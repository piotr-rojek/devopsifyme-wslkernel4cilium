name: Docker Image CI

env:
  imageTag: ubuntu:latest
  containerName: wsl-kernel-4-cilium
  kernelOrigin: https://github.com/microsoft/WSL2-Linux-Kernel.git
  kernelBranch: linux-msft-wsl-5.15.y

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.head_ref }}   # checkout the correct branch name
        fetch-depth: 0                # fetch the whole repo history
    
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.7
      with:
        versionSpec: '5.x'

    - name: Determine Version
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.9.7

    - name: Archive build output
      run: |
        docker run --name $containerName -d -it -e KERNEL_ORIGIN=$kernelOrigin -e KERNEL_BRANCH=$kernelBranch $imageTag bash
        docker cp build.sh "$containerName:/"
        docker exec $containerName mkdir /output
        docker exec $containerName touch /output/test
        docker cp "$containerName:/output/" .
        docker rm $containerName --force
        tar -czvf $kernelBranch-${{ steps.gitversion.outputs.semVer }}.tar.gz output

    - name: Upload build output
      uses: actions/upload-artifact@v3
      with:
        name: kernel
        path: ${{env.kernelBranch}}-${{ steps.gitversion.outputs.semVer }}.tar.gz

    - name: Create Release
      #if: github.ref == 'refs/heads/main'
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        release_name: ${{env.kernelBranch}}-v${{ steps.gitversion.outputs.SemVer }}
        tag_name: v${{ steps.gitversion.outputs.SemVer }}

    - name: Upload Release Asset
      #if: github.ref == 'refs/heads/main'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{env.kernelBranch}}-${{ steps.gitversion.outputs.semVer }}.tar.gz
        asset_name: ${{env.kernelBranch}}-${{ steps.gitversion.outputs.semVer }}.tar.gz
        asset_content_type: application/tar+gzip

